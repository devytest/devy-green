/*
  This JSON object contains the static data for features used by all students.
*/

var stringExp = "(['\"`])\\w+\\1"
var numericExp = "\\d*\\.?\\d+"
var variableExp = "\\w+"
var boolExp = "(?:true)|(?:false)"



// TODO: Individualize these
globalInstrux = {
  "expression-correct": "Correct expression! Click run to continue.",
  "expression-incorrect": "Incorrect! Check your expression carefully, and try again.",
  "execution": 'returned the value below.'
}

features = {
  "getAppIcon": {
    id: "getAppIcon",
    entryInstrux: "Call the function that will return your app's icon filename",
    displayType: 'imageType',
    codeTag: true,
    placeholderText: "App Icon",
    mode: 'debug',
    type: "function",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "appName": {
    id: "appName",
    entryInstrux: "Read the value of the variable containing your app's name",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "App Name",
    mode: 'debug',
    type: "global_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "appVersion": {
    id: "appVersion",
    entryInstrux: "Read the value of the variable containing your app's version",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "App Version",
    mode: 'debug',
    type: "global_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAppAuthor": {
    id: "getAppAuthor",
    entryInstrux: "Call the function that will return your app's author's full name",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "App Author",
    mode: 'debug',
    entryInstrux: "Call the function that will return your app's author",
    type: "function",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAppLocationLink": {
    id: "getAppLocationLink",
    entryInstrux: "Call the function that will create a Google Maps link to your app's location",
    displayType: 'linkType',
    codeTag: true,
    placeholderText: "App Location Link",
    mode: 'debug',
    type: "function",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "setAppColor": {
    id: "setAppColor",
    entryInstrux: "Call the function that will set your app's color to the color given",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "Set App Color",
    mode: 'debug',
    type: "function",
    args: 'str',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "setAppFont": {
    id: "setAppFont",
    entryInstrux: "Call the function that will set your app's font to the font given",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "Set App Font",
    mode: 'debug',
    type: "function",
    args: 'str',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "setAppWallpaper": {
    id: "setAppWallpaper",
    entryInstrux: "Call the function that will set your app's wallpaper to the preset given",
    displayType: 'settingType',
    codeTag: true,
    placeholderText: "Set App Wallpaper",
    mode: 'debug',
    type: "function",
    args: 'num',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "appYear": {
    id: "appYear",
    entryInstrux: "Enter the expression to retreive the variable containing the year your app was created",
    displayType: 'tableType',
    codeTag: true,
    mode: 'debug',
    placeholderText: "App Year",
    type: "global_var",
    expressionExpected: "appYear",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAppSeason": {
    id: "getAppSeason",
    entryInstrux: "Call the function that will return the season when given a month",
    displayType: 'tableType',
    codeTag: true,
    mode: 'debug',
    placeholderText: "App Season",
    type: "function",
    args: 'str',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAppCredits": {
    id: "getAppCredits",
    entryInstrux: "Call the function that will return your app's credits",
    displayType: 'tableType',
    codeTag: true,
    placeholderText: "App Credits",
    mode: 'debug',
    type: "function",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "createTrainer": {
    id: "createTrainer",
    entryInstrux: "Call the function that will return your trainer's last name",
    displayType: 'tableType',
    codeTag: true,
    mode: 'debug',
    placeholderText: "Pokemon Trainer",
    entryInstrux: "Create a new Trainer and save it to a variable",
    type: "constructor", // TODO: Double check this
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
    trainerVar: false
  },
  "firstName": {
    id: "firstName",
    entryInstrux: "Enter the expression that will retrieve your trainer's first name",
    displayType: 'tableType',
    type: "instance_var",
    codeTag: true,
    mode: 'debug',
    placeholderText: "First Name",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "lastName": {
    id: "lastName",
    entryInstrux: "Enter the expression that will retrieve your trainer's last name",
    displayType: 'tableType',
    type: "instance_var",
    codeTag: true,
    mode: 'debug',
    placeholderText: "Last Name",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "age": {
    id: "age",
    entryInstrux: "Enter the expression that will retrieve your trainer's age",
    displayType: 'tableType',
    type: "instance_var",
    codeTag: true,
    mode: 'debug',
    placeholderText: "Age",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "slogan": {
    id: "slogan",
    entryInstrux: "Enter the expression that will retrieve your trainer's slogan",
    displayType: 'tableType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "favoriteElement": {
    id: "favoriteElement",
    entryInstrux: "Enter the expression that will retrieve your trainer's favorite element",
    displayType: 'tableType',
    type: "instance_var",
    codeTag: true,
    mode: 'debug',
    placeholderText: "Favorite Element",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "favoriteColor": {
    id: "favoriteColor",
    entryInstrux: "Enter the expression that will retrieve your trainer's favorite color",
    displayType: 'tableType',
    type: "instance_var",
    codeTag: true,
    mode: 'debug',
    placeholderText: "Favorite Color",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "energy": {
    id: "energy",
    entryInstrux: "Enter the expression that will retrieve your trainer's energy",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "happiness": {
    id: "happiness",
    entryInstrux: "Enter the expression that will retrieve your trainer's happiness",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "confidence": {
    id: "confidence",
    entryInstrux: "Enter the expression that will retrieve your trainer's confidence",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "intelligence": {
    id: "intelligence",
    entryInstrux: "Enter the expression that will retrieve your trainer's intelligence",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "strength": {
    id: "strength",
    entryInstrux: "Enter the expression that will retrieve your trainer's strength",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "coins": {
    id: "coins",
    entryInstrux: "Enter the expression that will retrieve your trainer's coins",
    displayType: 'barType',
    type: "instance_var",
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getFullName": {
    id: "getFullName",
    entryInstrux: "Call the method that will create and return your trainer's 'full name'",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getReverseName": {
    id: "getReverseName",
    entryInstrux: "Call the method that will create and return your trainer's 'reverse name'",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getDoubleFullName": {
    id: "getDoubleFullName",
    entryInstrux: "Call the method that will create and return your trainer's 'double full name'",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getDoubleReverseName": {
    id: "getDoubleReverseName",
    entryInstrux: "Call the method that will create and return your trainer's 'double full name'",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getImageFileName": {
    id: "getImageFileName",
    entryInstrux: "Call the method that will create and return your trainer's image filename",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getFirstNameLastInitial": {
    id: "getFirstNameLastInitial",
    entryInstrux: "Call the method that will create and return your trainer's first name followed by their last initial",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getFirstInitialLastName": {
    id: "getFirstInitialLastName",
    entryInstrux: "Call the method that will create and return your trainer's first initial followed by their last name",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAgeInMonths": {
    id: "getAgeInMonths",
    entryInstrux: "Call the method that will calculate and return your trainer's age in months",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAgeInWeeks": {
    id: "getAgeInWeeks",
    entryInstrux: "Call the method that will calculate and return your trainer's age in weeks",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAgeInDays": {
    id: "getAgeInDays",
    entryInstrux: "Call the method that will calculate and return your trainer's age in days",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAgeInHours": {
    id: "getAgeInHours",
    entryInstrux: "Call the method that will calculate and return your trainer's age in hourss",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  "getAgeInMinutes": {
    id: "getAgeInMinutes",
    entryInstrux: "Call the method that will calculate and return your trainer's age in minutes",
    displayType: 'tableType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: true,
    status: "expression-empty",
    complete: false,
  },
  // "getAgeInSeconds": {
  //   id: "getAgeInSeconds",
  //   entryInstrux: "Call the method that will calculate and return your trainer's age in seconds",
  //   displayType: 'tableType',
  //   type: "method",
  //   expressionExpected: "t.getAgeInSeconds()",
  //   expressionEntered: '',
  //   hasReturnValue: true,
  //   status: "expression-empty",
  //   complete: false,
  // },
  "writeHi": {
    id: "writeHi",
    entryInstrux: "Call the method that will cause your trainer to write 'hi'",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "writeSlogan": {
    id: "writeSlogan",
    entryInstrux: "Call the method that will cause your trainer to write their slogan",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "write": {
    id: "write",
    entryInstrux: "Call the method that will cause your trainer to write whatever the user inputs",
    displayType: 'triggerType',
    type: "method",
    args: 'str',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "sayHi": {
    id: "sayHi",
    entryInstrux: "Call the method that will cause your trainer to say 'hi' out loud",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "saySlogan": {
    id: "saySlogan",
    entryInstrux: "Call the method that will cause your trainer to say their slogan out loud",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "say": {
    id: "say",
    entryInstrux: "Call the method that will cause your trainer to say whatever the user inputs out loud",
    displayType: 'triggerType',
    type: "method",
    args: 'str',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "work": {
    id: "work",
    entryInstrux: "Call the method that will cause your trainer to work",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "rest": {
    id: "rest",
    entryInstrux: "Call the method that will cause your trainer to rest",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "exercise": {
    id: "exercise",
    entryInstrux: "Call the method that will cause your trainer to exercise",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "watchTelevision": {
    id: "watchTelevision",
    entryInstrux: "--- TO BE COMPLETED ---",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "readBook": {
    id: "readBook",
    entryInstrux: "--- TO BE COMPLETED ---",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "takeCompliment": {
    id: "takeCompliment",
    entryInstrux: "--- TO BE COMPLETED ---",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  },
  "takeInsult": {
    id: "takeInsult",
    entryInstrux: "--- TO BE COMPLETED ---",
    displayType: 'triggerType',
    type: "method",
    args: '',
    expressionEntered: '',
    hasReturnValue: false,
    status: "expression-empty",
    complete: false,
  }
}